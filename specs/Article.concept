<concept_spec>

concept Article

purpose
    to represent content authored by users with title, description, and body

state
    a set of Articles with
        a title String
        a description String
        a body String
        a slug String
        a createdAt String
        a updatedAt String
        a author String

actions
    create (article: String, title: String, description: String, body: String, author: String) : (article: String)
        add article to articles
        generate slug from title (lowercase, replace spaces with dashes, remove special chars)
        associate title, description, body, slug with article
        set createdAt and updatedAt to current timestamp
        associate author with article
        return the article reference
    
    create (article: String, title: String, description: String, body: String, author: String) : (error: String)
        if generated slug already exists in articles, describe error
        return error description
        
    update (article: String, title: String) : (article: String)
        if article exists in articles, update title
        also update slug accordingly, ensuring unique slug
        update updatedAt to current timestamp
        return article
        
    update (article: String, title: String) : (error: String)
        if article doesn't exist in articles, describe error
        return error description
        
    update (article: String, description: String) : (article: String)
        if article exists in articles, update description
        update updatedAt to current timestamp
        return article
        
    update (article: String, description: String) : (error: String)
        if article doesn't exist in articles, describe error
        return error description
        
    update (article: String, body: String) : (article: String)
        if article exists in articles, update body
        update updatedAt to current timestamp
        return article
        
    update (article: String, body: String) : (error: String)
        if article doesn't exist in articles, describe error
        return error description
        
    delete (article: String) : (article: String)
        if article exists in articles, remove article and all associations
        return article
        
    delete (article: String) : (error: String)
        if article doesn't exist in articles, describe error
        return error description

queries
    _get (article: String) : (article: String, title: String, description: String, body: String, slug: String, createdAt: String, updatedAt: String, author: String)
        fetch article details
    _getBySlug (slug: String) : (article: String, title: String, description: String, body: String, slug: String, createdAt: String, updatedAt: String, author: String)
        fetch article by slug
    _getByAuthor (author: String) : (article: String, title: String, description: String, body: String, slug: String, createdAt: String, updatedAt: String, author: String)
        fetch all articles by author
    _getAll () : (article: String, title: String, description: String, body: String, slug: String, createdAt: String, updatedAt: String, author: String)
        fetch all articles

operational principle
    after create (article: "a", title: "My Great Article", description: "desc", body: "content", author: "u") : (article: "a")
    the state will contain an article "a" with slug "my-great-article", and 
    after update (article: "a", title: "New Title") : (article: "a")
    the article will have title "New Title" and updatedAt later than createdAt

</concept_spec>
